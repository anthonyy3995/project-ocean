[{"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/index.js":"1","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/App.js":"2","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/reportWebVitals.js":"3","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Sunlight.js":"4","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Twilight.js":"5","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Abyss.js":"6","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Midnight.js":"7","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Trench.js":"8","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Title.js":"9","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Hooks/UseOnScreen.js":"10","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Resources.js":"11","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Main.js":"12"},{"size":599,"mtime":1610867089217,"results":"13","hashOfConfig":"14"},{"size":346,"mtime":1610875656255,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610824057641,"results":"16","hashOfConfig":"14"},{"size":1216,"mtime":1610873943597,"results":"17","hashOfConfig":"14"},{"size":2014,"mtime":1610875510425,"results":"18","hashOfConfig":"14"},{"size":237,"mtime":1610832800611,"results":"19","hashOfConfig":"14"},{"size":1247,"mtime":1610865003444,"results":"20","hashOfConfig":"14"},{"size":244,"mtime":1610832793010,"results":"21","hashOfConfig":"14"},{"size":1226,"mtime":1610875692107,"results":"22","hashOfConfig":"14"},{"size":755,"mtime":1610863548858,"results":"23","hashOfConfig":"14"},{"size":340,"mtime":1610875231906,"results":"24","hashOfConfig":"14"},{"size":3827,"mtime":1610875169515,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13uzeva",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/index.js",["54"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/App.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/reportWebVitals.js",[],["55","56"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Sunlight.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Twilight.js",["57"],"import React, {useState} from 'react';\nimport './../Styles/Twilight.css';\nimport Fish from './../all-images/fish copy.png';\nimport Squid from './../all-images/squid copy.png';\nimport Microplastic from './../all-images/microplastic.png';\n\nfunction Twilight(){\n    \n    const [showFishBubble, setShowFishBubble] = useState(false);\n    const [showSquidBubble, setShowSquidBubble] = useState(false);\n    \n    return(\n        <div className ='Twilight'>\n            <h1>\n                Twilight Layer\n            </h1>\n            <div id='fish' className='fishContainer'>\n                <img alt='' src={Fish} className='fishImage' \n                    // listeners\n                    onMouseEnter={() => setShowFishBubble(true)}\n                    onMouseLeave={() => setShowFishBubble(false)}\n                />\n                {showFishBubble ? \n                    // if true\n                    <h2 className='fishLabel'>\n                        1 out of every 4 fish at markets in California contained plastic in their guts.\n                    </h2>:\n                    // if false\n                    <h1>\n                        {/* emptiness */}\n                    </h1>\n                }\n                \n            </div>\n\n            <div id='squid' className='squidContainer'>\n                <img alt='' src={Squid} className='squidImage' \n                    // listeners\n                    onMouseEnter={() => setShowSquidBubble(true)}\n                    onMouseLeave={() => setShowSquidBubble(false)}\n                />\n                {showSquidBubble ? \n                    // if true\n                    <h2 className='squidLabel'>\n                        1 out of every 4 fish at markets in California contained plastic in their guts.\n                    </h2>:\n                    // if false\n                    <h1>\n                        {/* emptiness */}\n                    </h1>\n                }\n\n            </div>\n\n        </div>\n        \n    )\n    \n\n}\nexport default Twilight","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Abyss.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Midnight.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Trench.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Title.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Hooks/UseOnScreen.js",["58","59","60","61","62"],"import React, {useState, useEffect, useRef} from 'react';\n\nfunction useOnScreen(ref, rootMargin = '0px') {\n    // State and setter for storing whether element is visible\n    const [isIntersecting, setIntersecting] = useState(false);\n  \n    useEffect(() => {\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          // Update our state when observer callback fires\n          setIntersecting(entry.isIntersecting);\n        },\n        {\n          rootMargin\n        }\n      );\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n      return () => {\n        observer.unobserve(ref.current);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n  \n    return isIntersecting;\n  }","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Resources.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Main.js",["63","64"],"import React, {useRef, useState, useEffect} from 'react';\nimport Title from './../Layers/Title.js'\nimport Sunlight from './../Layers/Sunlight.js'\nimport Twilight from './../Layers/Twilight.js'\nimport Midnight from './../Layers/Midnight.js'\nimport Abyss from './../Layers/Abyss.js'\nimport Trench from './../Layers/Trench.js'\n// import useOnScreen from './../Hooks/UseOnScreen.js';\nimport './../Styles/Main.css';\nimport './../Styles/Nav.css';\n\nfunction useOnScreen(ref, rootMargin = '0px') {\n    // State and setter for storing whether element is visible\n    const [isIntersecting, setIntersecting] = useState(false);\n  \n    useEffect(() => {\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          // Update our state when observer callback fires\n          setIntersecting(entry.isIntersecting);\n        },\n        {\n          rootMargin\n        }\n      );\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    //   changes from return ()=>{}\n    //  https://stackoverflow.com/questions/45514676/react-check-if-element-is-visible-in-dom\n      else {\n        observer.unobserve(ref.current);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n  \n    return isIntersecting;\n  }\n\nfunction Main(){\n  // instantiate refs\n  const titleRef = useRef(null)\n  const sunlightRef = useRef(null)\n  const twilightRef = useRef(null)\n  const midnightRef = useRef(null)\n  const abyssRef = useRef(null)\n  const trenchRef = useRef(null)\n\n  //instantiate useonescreen refs\n  const titleVisible = useOnScreen(titleRef, '-300px');\n  const sunlightVisible = useOnScreen(sunlightRef, '-300px');\n  const twilightVisible = useOnScreen(twilightRef, '-350px');\n  const midnightVisible = useOnScreen(midnightRef, '-300px');\n  const abyssVisible = useOnScreen(abyssRef, '-300px');\n  const trenchVisible = useOnScreen(trenchRef, '-300px');\n\n  const NavBar = () => {\n    return(\n      <div className='navContainer'> \n        <button \n          className='navButton'\n          onClick={()=> executeScroll(sunlightRef)}\n        >\n          {sunlightVisible ? <h2>SHOWN</h2> : 1}\n        </button>\n        <button \n          className='navButton'\n          onClick={()=> executeScroll(twilightRef)}\n        >\n          {twilightVisible ? <h2>SHOWN</h2> : 2}\n        </button>\n        <button \n          className='navButton'\n          onClick={()=>executeScroll(midnightRef)}\n        >\n          {midnightVisible ? <h2>SHOWN</h2> : 3}\n        </button>\n        <button \n          className='navButton'\n          onClick={()=>executeScroll(abyssRef)}\n        >\n          {abyssVisible ? <h2>SHOWN</h2> : 4}\n        </button>\n        <button \n          className='navButton'\n          onClick={()=>executeScroll(trenchRef)}\n        >\n          {trenchVisible ? <h2>SHOWN</h2> : 5}\n        </button>\n      </div>\n    )\n  }\n\n  const executeScroll = (id) => id.current.scrollIntoView({\n    behavior: 'smooth'\n  });\n\n\n\n  return (\n    <div className='App'>\n\n      <NavBar/>\n      \n      <div className='layers'> \n        <div className='light'>\n          <button className='exploreButton' onClick={()=>executeScroll(sunlightRef)}>\n              Explore!\n          </button>\n          <div ref={titleRef}><Title visible={sunlightVisible}/></div>\n          <div ref={sunlightRef}><Sunlight/></div>\n        </div>\n        <div className='dark'>\n          <div ref={twilightRef}><Twilight/></div>\n          <div ref={midnightRef}><Midnight/></div>\n          <div ref={abyssRef}><Abyss/></div>\n          <div ref={trenchRef}><Trench/></div>\n          <button \n            className='returnUpButton' \n            onClick={() => executeScroll(titleRef)}\n          >\n            Go back up\n          </button>\n        </div>\n        \n      </div>\n      \n    </div>\n  );\n}\nexport default Main;",{"ruleId":"65","severity":1,"message":"66","line":3,"column":24,"nodeType":"67","messageId":"68","endLine":3,"endColumn":30},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"65","severity":1,"message":"73","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"74","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"75","line":1,"column":37,"nodeType":"67","messageId":"68","endLine":1,"endColumn":43},{"ruleId":"65","severity":1,"message":"76","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":21},{"ruleId":"77","severity":1,"message":"78","line":21,"column":32,"nodeType":"67","endLine":21,"endColumn":39},{"ruleId":"77","severity":1,"message":"79","line":23,"column":8,"nodeType":"80","endLine":23,"endColumn":10,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"79","line":34,"column":8,"nodeType":"80","endLine":34,"endColumn":10,"suggestions":"82"},{"ruleId":"65","severity":1,"message":"83","line":49,"column":9,"nodeType":"67","messageId":"68","endLine":49,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Microplastic' is defined but never used.","'React' is defined but never used.","'useRef' is defined but never used.","'useOnScreen' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'ref' and 'rootMargin'. Either include them or remove the dependency array.","ArrayExpression",["86"],["87"],"'titleVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"88","fix":"90"},"Update the dependencies array to be: [ref, rootMargin]",{"range":"91","text":"92"},{"range":"93","text":"92"},[649,651],"[ref, rootMargin]",[1154,1156]]