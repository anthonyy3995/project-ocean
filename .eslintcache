[{"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/index.js":"1","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/App.js":"2","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/reportWebVitals.js":"3","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Sunlight.js":"4","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Twilight.js":"5","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Abyss.js":"6","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Midnight.js":"7","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Trench.js":"8","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Title.js":"9","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Hooks/UseOnScreen.js":"10","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Resources.js":"11","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Main.js":"12"},{"size":605,"mtime":1611274557242,"results":"13","hashOfConfig":"14"},{"size":382,"mtime":1611274980809,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610824057641,"results":"16","hashOfConfig":"14"},{"size":2368,"mtime":1611275273977,"results":"17","hashOfConfig":"14"},{"size":3142,"mtime":1611275228702,"results":"18","hashOfConfig":"14"},{"size":2474,"mtime":1611275291187,"results":"19","hashOfConfig":"14"},{"size":2663,"mtime":1610932623129,"results":"20","hashOfConfig":"14"},{"size":2449,"mtime":1611275241198,"results":"21","hashOfConfig":"14"},{"size":1538,"mtime":1611275259229,"results":"22","hashOfConfig":"14"},{"size":755,"mtime":1610863548858,"results":"23","hashOfConfig":"14"},{"size":2927,"mtime":1611275169673,"results":"24","hashOfConfig":"14"},{"size":3839,"mtime":1611275197392,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13uzeva",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/index.js",["54"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/App.js",["55","56"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/reportWebVitals.js",[],["57","58"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Sunlight.js",[],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Twilight.js",["59"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Abyss.js",["60","61"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Midnight.js",["62"],"import React, {useState} from 'react';\nimport Typist from 'react-typist';\nimport './../Styles/Midnight.css';\nimport Angler from './../all-images/anglerfish copy.png';\nimport Whale from './../all-images/whale.png'\nimport Microplastic from './../all-images/microplastic.png';\nimport bubblesTwo from './../all-images/bubbles2.png';\nimport PlasticBag from './../all-images/plastic-bag-FINAL.png';\n\nfunction Midnight(props){\n\n    const [showAnglerBubble, setShowAnglerBubble] = useState(false);\n    const [showWhaleBubble, setShowWhaleBubble] = useState(false);\n\n    return(\n        <div className ='Midnight'>\n            {/* {props.visible ? <Typist>\n                <h1 className='midnightTitle'>Midnight Layer</h1>\n            </Typist> : ''} */}\n            <Typist cursor={{show:false, hideWhenDone:true}}>\n                <h1 className='midnightTitle'>Midnight Layer</h1>\n            </Typist>\n            \n            <img alt='' src={PlasticBag} className='plasticBagImage'/>\n            <div id='angler' className='anglerContainer'>\n                <img alt='' src={Angler} className='anglerImage' \n                    // listeners\n                    onMouseEnter={() => setShowAnglerBubble(true)}\n                    onMouseLeave={() => setShowAnglerBubble(false)}\n                />\n                {showAnglerBubble ? \n                    // if true\n                    <h2 className='anglerLabel'>\n                        Plastic bags have an average usage of 12 minutes and lifespan of 500+ years.\n                    </h2>:\n                    // if false\n                    <h1>\n                        {/* emptiness */}\n                    </h1>\n                } \n            </div>\n            <img alt='' src={Microplastic} className='microplasticImage2'/> \n            <div id='whale' className='whaleContainer'>\n                <img alt='' src={Whale} className='whaleImage' \n                    // listeners\n                    onMouseEnter={() => setShowWhaleBubble(true)}\n                    onMouseLeave={() => setShowWhaleBubble(false)}\n                />\n                {showWhaleBubble ? \n                    // if true\n                    <h2 className='whaleLabel'>\n                        Every year, 100,000 marine animals are killed by plastic bags.\n                    </h2>:\n                    // if false\n                    <h1>\n                        {/* emptiness */}\n                    </h1>\n                } \n            </div>\n            <img src={bubblesTwo} className='bubblesTwo'/>\n            <img alt='' src={Microplastic} className='microplasticImage3'/>\n        </div>\n        \n    )\n}\nexport default Midnight","/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Trench.js",["63"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Layers/Title.js",["64"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Hooks/UseOnScreen.js",["65","66","67","68","69"],"import React, {useState, useEffect, useRef} from 'react';\n\nfunction useOnScreen(ref, rootMargin = '0px') {\n    // State and setter for storing whether element is visible\n    const [isIntersecting, setIntersecting] = useState(false);\n  \n    useEffect(() => {\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          // Update our state when observer callback fires\n          setIntersecting(entry.isIntersecting);\n        },\n        {\n          rootMargin\n        }\n      );\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n      return () => {\n        observer.unobserve(ref.current);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n  \n    return isIntersecting;\n  }",["70","71"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Resources.js",["72"],"/Users/anthonyyan/Desktop/HackDavis/project-ocean/src/Pages/Main.js",["73","74","75"],{"ruleId":"76","severity":1,"message":"77","line":3,"column":24,"nodeType":"78","messageId":"79","endLine":3,"endColumn":30},{"ruleId":"76","severity":1,"message":"80","line":2,"column":20,"nodeType":"78","messageId":"79","endLine":2,"endColumn":33},{"ruleId":"76","severity":1,"message":"81","line":2,"column":35,"nodeType":"78","messageId":"79","endLine":2,"endColumn":40},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":21,"column":13,"nodeType":"88","endLine":21,"endColumn":58},{"ruleId":"76","severity":1,"message":"89","line":13,"column":12,"nodeType":"78","messageId":"79","endLine":13,"endColumn":28},{"ruleId":"76","severity":1,"message":"90","line":13,"column":30,"nodeType":"78","messageId":"79","endLine":13,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":60,"column":13,"nodeType":"88","endLine":60,"endColumn":59},{"ruleId":"76","severity":1,"message":"91","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":22,"column":21,"nodeType":"88","endLine":22,"endColumn":65},{"ruleId":"76","severity":1,"message":"92","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"93","line":1,"column":37,"nodeType":"78","messageId":"79","endLine":1,"endColumn":43},{"ruleId":"76","severity":1,"message":"94","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":21,"column":32,"nodeType":"78","endLine":21,"endColumn":39},{"ruleId":"95","severity":1,"message":"97","line":23,"column":8,"nodeType":"98","endLine":23,"endColumn":10,"suggestions":"99"},{"ruleId":"82","replacedBy":"100"},{"ruleId":"84","replacedBy":"101"},{"ruleId":"86","severity":1,"message":"87","line":22,"column":21,"nodeType":"88","endLine":22,"endColumn":60},{"ruleId":"95","severity":1,"message":"97","line":35,"column":8,"nodeType":"98","endLine":35,"endColumn":10,"suggestions":"102"},{"ruleId":"76","severity":1,"message":"103","line":50,"column":11,"nodeType":"78","messageId":"79","endLine":50,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":119,"column":15,"nodeType":"88","endLine":119,"endColumn":102},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["104"],"no-negated-in-lhs",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'showBottleBubble' is assigned a value but never used.","'setShowBottleBubble' is assigned a value but never used.","'Floor' is defined but never used.","'React' is defined but never used.","'useRef' is defined but never used.","'useOnScreen' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'ref.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'ref.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'ref' and 'rootMargin'. Either include them or remove the dependency array.","ArrayExpression",["106"],["104"],["105"],["107"],"'titleVisible' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [ref, rootMargin]",{"range":"111","text":"112"},{"range":"113","text":"112"},[649,651],"[ref, rootMargin]",[1206,1208]]